// class Pin

// ------------ЗАЧЕМ-------------
// этот класс описывает один пин платы
// за счет этого появляется возможность
// подключить все что угодно к плате
// используя плановый NodeManager

// ----------СТРУКТУРА-----------
// пины имеют информацию о статусе
// (вкл / выкл) или же напряжение
// также, пины имеют поле для режимов IO
// вход / выход
// так как используется один массив
// для хранения пинов
// класс соддержит поле для типа пина
// цифровой / аналоговый.

// ------------ТИПЫ--------------
// сейчас класс использует
// примитивные типы данных для
// отслеживания значений
// позже этот класс перейдет на использование
// типов из NodeManager

// -----------MANAGER--------------
// NodeManager будет представлять собой
// способ соединять различные типы
// элементов к плате
// привет, полиморфизм.

// keep it simple, stupid
// cvtps2dq, 2024 - 1T - interpreter-core

class Pin {

    private _state : number = 0;
    private _mode : boolean = false;
    private _type : boolean = false;

    get state(): number {
        return this._state;
    }

    set state(value: number) {
        this._state = value;
    }

    get mode(): boolean {
        return this._mode;
    }

    set mode(value: boolean) {
        this._mode = value;
    }

}

export default Pin;