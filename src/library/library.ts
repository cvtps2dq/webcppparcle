/* tslint:disable */
export const Headers = new Map<string, string>([["assert.h","#ifndef _ASSERT_H\n#define _ASSERT_H\n\n#ifdef NDEBUG\n#define assert(EX)\n#else\n#define assert(EX) (void)((EX) || (__assert (#EX, __FILE__, __LINE__),0))\n#endif\n\nvoid __assert (const char *msg, const char *file, int line);\n\n#endif"],["stdarg.h","#ifndef _STDARG_H\n#define _STDARG_H\n\ntypedef void* va_list;\n#define va_start(ptr,arg) (ptr) = &(arg) + sizeof(arg) + 4\n#define va_arg(ptr,type) ((ptr) += sizeof(type), *((type *)(ptr - sizeof(type))))\n#define va_end(ptr) (ptr) = 0;\n\n#endif"],["string.h","void strcpy(const char *dst, const char *src);"],["stdio.h","#ifndef _STDIO_H\n#define _STDIO_H\n\nint printf(const char * format, ...);\n\n#endif"],["syscall.h","#ifndef _SYSCALL_H\n#define _SYSCALL_H\n\n__libcall void print(int i);\n__libcall void puts(const char * s);\n\n#endif"]]);
export const Impls = new Map<string, string>([["assert.cpp","#include <stdio.h>\n\nvoid __assert (const char *msg, const char *file, int line){\n    //printf(\"assert failed in %s#%d: %s\", file, line, msg);\n    //exit(255);\n}"],["printf.cpp","#include <stdio.h>\n#include <stdarg.h>\n\n//int print(int x);\n\n//int printf(const char * format, ...){\n//    va_list arg_list;\n//    va_start(arg_list, format);\n//    int d = *(int *)arg_list;\n//    print(d);\n//    return 123;\n//}"],["string.cpp","void strcpy(const char *dst, const char *src){\n    //while( *dst++ = *src++ );\n}"]]);
